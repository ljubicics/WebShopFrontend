{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    products: [],\n    productTypes: []\n  },\n  mutations: {\n    addProducts(state, product) {\n      state.products = product;\n    },\n    addProductTypes(state, productType) {\n      state.productTypes.push(productType);\n    },\n    setProductTypes(state, productTypes) {\n      state.productTypes = productTypes;\n    }\n  },\n  actions: {\n    login: function ({\n      commit\n    }, obj) {\n      fetch(\"http://localhost:9000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(obj)\n      }).then(res => res.json()).then(tkn => {\n        console.log(tkn.token);\n        if (tkn.msg) {\n          alert(tkn.msg);\n          return tkn.msg;\n        } else {\n          commit(\"setToken\", tkn.token);\n        }\n      });\n    },\n    fetchProducts({\n      commit\n    }) {\n      fetch(\"http://localhost:8000/admin/products/\", {\n        method: \"GET\"\n      }).then(obj => obj.json()).then(res => {\n        commit(\"addProducts\", res.data);\n      });\n    },\n    fetchProductTypes({\n      commit\n    }) {\n      fetch(\"http://localhost:8000/admin/productTypes/\", {\n        method: \"GET\"\n      }).then(obj => obj.json()).then(res => {\n        res.data.forEach(el => {\n          fetch(`http://localhost:8000/admin/products/byType/${el.id}`).then(obj2 => obj2.json()).then(data => {\n            el[\"productsForType\"] = data;\n          });\n        });\n        commit(\"setProductTypes\", res.data);\n      });\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","state","products","productTypes","mutations","addProducts","product","addProductTypes","productType","push","setProductTypes","actions","login","commit","obj","fetch","method","headers","body","JSON","stringify","then","res","json","tkn","console","log","token","msg","alert","fetchProducts","data","fetchProductTypes","forEach","el","id","obj2"],"sources":["/Users/strahinja/github-classroom/Skript-2022-23/frontend-vuejs-petar-strahinja-ljubicicRN71-20/frontend/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    products: [],\n    productTypes: [],\n  },\n  mutations: {\n    addProducts(state, product) {\n      state.products = product;\n    },\n    addProductTypes(state, productType) {\n      state.productTypes.push(productType);\n    },\n    setProductTypes(state, productTypes) {\n      state.productTypes = productTypes;\n    },\n  },\n  actions: {\n    login: function ({ commit }, obj) {\n      fetch(\"http://localhost:9000/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(obj),\n      })\n        .then((res) => res.json())\n        .then((tkn) => {\n          console.log(tkn.token);\n          if (tkn.msg) {\n            alert(tkn.msg);\n            return tkn.msg;\n          } else {\n            commit(\"setToken\", tkn.token);\n          }\n        });\n    },\n    fetchProducts({ commit }) {\n      fetch(\"http://localhost:8000/admin/products/\", {\n        method: \"GET\",\n      })\n        .then((obj) => obj.json())\n        .then((res) => {\n          commit(\"addProducts\", res.data);\n        });\n    },\n    fetchProductTypes({ commit }) {\n      fetch(\"http://localhost:8000/admin/productTypes/\", {\n        method: \"GET\",\n      })\n        .then((obj) => obj.json())\n        .then((res) => {\n          res.data.forEach((el) => {\n            fetch(`http://localhost:8000/admin/products/byType/${el.id}`)\n              .then((obj2) => obj2.json())\n              .then((data) => {\n                el[\"productsForType\"] = data;\n              });\n          });\n          commit(\"setProductTypes\", res.data);\n        });\n    },\n  },\n});\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvBD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACE,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACLC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB,CAAC;EACDC,SAAS,EAAE;IACTC,WAAW,CAACJ,KAAK,EAAEK,OAAO,EAAE;MAC1BL,KAAK,CAACC,QAAQ,GAAGI,OAAO;IAC1B,CAAC;IACDC,eAAe,CAACN,KAAK,EAAEO,WAAW,EAAE;MAClCP,KAAK,CAACE,YAAY,CAACM,IAAI,CAACD,WAAW,CAAC;IACtC,CAAC;IACDE,eAAe,CAACT,KAAK,EAAEE,YAAY,EAAE;MACnCF,KAAK,CAACE,YAAY,GAAGA,YAAY;IACnC;EACF,CAAC;EACDQ,OAAO,EAAE;IACPC,KAAK,EAAE,UAAU;MAAEC;IAAO,CAAC,EAAEC,GAAG,EAAE;MAChCC,KAAK,CAAC,6BAA6B,EAAE;QACnCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,GAAG;MAC1B,CAAC,CAAC,CACCO,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,GAAG,IAAK;QACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,KAAK,CAAC;QACtB,IAAIH,GAAG,CAACI,GAAG,EAAE;UACXC,KAAK,CAACL,GAAG,CAACI,GAAG,CAAC;UACd,OAAOJ,GAAG,CAACI,GAAG;QAChB,CAAC,MAAM;UACLf,MAAM,CAAC,UAAU,EAAEW,GAAG,CAACG,KAAK,CAAC;QAC/B;MACF,CAAC,CAAC;IACN,CAAC;IACDG,aAAa,CAAC;MAAEjB;IAAO,CAAC,EAAE;MACxBE,KAAK,CAAC,uCAAuC,EAAE;QAC7CC,MAAM,EAAE;MACV,CAAC,CAAC,CACCK,IAAI,CAAEP,GAAG,IAAKA,GAAG,CAACS,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEC,GAAG,IAAK;QACbT,MAAM,CAAC,aAAa,EAAES,GAAG,CAACS,IAAI,CAAC;MACjC,CAAC,CAAC;IACN,CAAC;IACDC,iBAAiB,CAAC;MAAEnB;IAAO,CAAC,EAAE;MAC5BE,KAAK,CAAC,2CAA2C,EAAE;QACjDC,MAAM,EAAE;MACV,CAAC,CAAC,CACCK,IAAI,CAAEP,GAAG,IAAKA,GAAG,CAACS,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEC,GAAG,IAAK;QACbA,GAAG,CAACS,IAAI,CAACE,OAAO,CAAEC,EAAE,IAAK;UACvBnB,KAAK,CAAE,+CAA8CmB,EAAE,CAACC,EAAG,EAAC,CAAC,CAC1Dd,IAAI,CAAEe,IAAI,IAAKA,IAAI,CAACb,IAAI,EAAE,CAAC,CAC3BF,IAAI,CAAEU,IAAI,IAAK;YACdG,EAAE,CAAC,iBAAiB,CAAC,GAAGH,IAAI;UAC9B,CAAC,CAAC;QACN,CAAC,CAAC;QACFlB,MAAM,CAAC,iBAAiB,EAAES,GAAG,CAACS,IAAI,CAAC;MACrC,CAAC,CAAC;IACN;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}