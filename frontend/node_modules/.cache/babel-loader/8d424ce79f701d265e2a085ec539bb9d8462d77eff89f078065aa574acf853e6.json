{"ast":null,"code":"import Vue from \"vue\";\nimport Vuex from \"vuex\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    products: [],\n    productTypes: []\n  },\n  mutations: {\n    addProducts(state, product) {\n      state.products = product;\n    },\n    addProductTypes(state, productType) {\n      state.productTypes = productType;\n    }\n  },\n  actions: {\n    fetchProducts({\n      commit\n    }) {\n      fetch(\"http://localhost:8000/admin/products/\", {\n        method: \"GET\"\n      }).then(obj => obj.json()).then(res => {\n        commit(\"addProducts\", res.data);\n      });\n    },\n    fetchProductTypes({\n      commit\n    }) {\n      fetch(\"http://localhost:8000/admin/productTypes/\", {\n        method: \"GET\"\n      }).then(obj => obj.json()).then(res => {\n        commit(\"addProductTypes\", res.data);\n      });\n    },\n    async fetchIDsByType({\n      commit,\n      state\n    }, typeID) {\n      const productType = state.productTypes.filter(prodType => prodType.productTypeID === typeID)[0];\n      if (department && department[\"imageIDs\"]) {\n        commit(\"setImageIDs\", department[\"imageIDs\"]);\n      } else {\n        const obj = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects?departmentIds=${depID}`);\n        const res = await obj.json();\n        commit(\"addIDsToDepartment\", {\n          id: depID,\n          imageIDs: res.objectIDs\n        });\n        commit(\"setImageIDs\", res.objectIDs);\n      }\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","state","products","productTypes","mutations","addProducts","product","addProductTypes","productType","actions","fetchProducts","commit","fetch","method","then","obj","json","res","data","fetchProductTypes","fetchIDsByType","typeID","filter","prodType","productTypeID","department","depID","id","imageIDs","objectIDs"],"sources":["/Users/strahinja/github-classroom/Skript-2022-23/frontend-vuejs-petar-strahinja-ljubicicRN71-20/frontend/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    products: [],\n    productTypes: [],\n  },\n  mutations: {\n    addProducts(state, product) {\n      state.products = product;\n    },\n\n    addProductTypes(state, productType) {\n      state.productTypes = productType;\n    },\n  },\n  actions: {\n    fetchProducts({ commit }) {\n      fetch(\"http://localhost:8000/admin/products/\", {\n        method: \"GET\",\n      })\n        .then((obj) => obj.json())\n        .then((res) => {\n          commit(\"addProducts\", res.data);\n        });\n    },\n\n    fetchProductTypes({ commit }) {\n      fetch(\"http://localhost:8000/admin/productTypes/\", {\n        method: \"GET\",\n      })\n        .then((obj) => obj.json())\n        .then((res) => {\n          commit(\"addProductTypes\", res.data);\n        });\n    },\n    async fetchIDsByType({ commit, state }, typeID) {\n      const productType = state.productTypes.filter(\n        (prodType) => prodType.productTypeID === typeID\n      )[0];\n      if (department && department[\"imageIDs\"]) {\n        commit(\"setImageIDs\", department[\"imageIDs\"]);\n      } else {\n        const obj = await fetch(\n          `https://collectionapi.metmuseum.org/public/collection/v1/objects?departmentIds=${depID}`\n        );\n        const res = await obj.json();\n\n        commit(\"addIDsToDepartment\", {\n          id: depID,\n          imageIDs: res.objectIDs,\n        });\n\n        commit(\"setImageIDs\", res.objectIDs);\n      }\n    },\n  },\n});\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvBD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACE,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACLC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB,CAAC;EACDC,SAAS,EAAE;IACTC,WAAW,CAACJ,KAAK,EAAEK,OAAO,EAAE;MAC1BL,KAAK,CAACC,QAAQ,GAAGI,OAAO;IAC1B,CAAC;IAEDC,eAAe,CAACN,KAAK,EAAEO,WAAW,EAAE;MAClCP,KAAK,CAACE,YAAY,GAAGK,WAAW;IAClC;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,aAAa,CAAC;MAAEC;IAAO,CAAC,EAAE;MACxBC,KAAK,CAAC,uCAAuC,EAAE;QAC7CC,MAAM,EAAE;MACV,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,GAAG,IAAK;QACbN,MAAM,CAAC,aAAa,EAAEM,GAAG,CAACC,IAAI,CAAC;MACjC,CAAC,CAAC;IACN,CAAC;IAEDC,iBAAiB,CAAC;MAAER;IAAO,CAAC,EAAE;MAC5BC,KAAK,CAAC,2CAA2C,EAAE;QACjDC,MAAM,EAAE;MACV,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,GAAG,IAAK;QACbN,MAAM,CAAC,iBAAiB,EAAEM,GAAG,CAACC,IAAI,CAAC;MACrC,CAAC,CAAC;IACN,CAAC;IACD,MAAME,cAAc,CAAC;MAAET,MAAM;MAAEV;IAAM,CAAC,EAAEoB,MAAM,EAAE;MAC9C,MAAMb,WAAW,GAAGP,KAAK,CAACE,YAAY,CAACmB,MAAM,CAC1CC,QAAQ,IAAKA,QAAQ,CAACC,aAAa,KAAKH,MAAM,CAChD,CAAC,CAAC,CAAC;MACJ,IAAII,UAAU,IAAIA,UAAU,CAAC,UAAU,CAAC,EAAE;QACxCd,MAAM,CAAC,aAAa,EAAEc,UAAU,CAAC,UAAU,CAAC,CAAC;MAC/C,CAAC,MAAM;QACL,MAAMV,GAAG,GAAG,MAAMH,KAAK,CACpB,kFAAiFc,KAAM,EAAC,CAC1F;QACD,MAAMT,GAAG,GAAG,MAAMF,GAAG,CAACC,IAAI,EAAE;QAE5BL,MAAM,CAAC,oBAAoB,EAAE;UAC3BgB,EAAE,EAAED,KAAK;UACTE,QAAQ,EAAEX,GAAG,CAACY;QAChB,CAAC,CAAC;QAEFlB,MAAM,CAAC,aAAa,EAAEM,GAAG,CAACY,SAAS,CAAC;MACtC;IACF;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}