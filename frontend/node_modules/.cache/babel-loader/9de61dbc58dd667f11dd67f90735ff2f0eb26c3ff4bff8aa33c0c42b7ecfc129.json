{"ast":null,"code":"import { mapActions } from \"vuex\";\nexport default {\n  name: \"Login\",\n  components: {},\n  data() {\n    return {\n      form: {\n        username: \"\",\n        password: \"\"\n      }\n    };\n  },\n  methods: {\n    //...mapActions([\"login\"]),\n    /*onSubmit(e) {\n      e.preventDefault();\n      const data = {\n        username: this.form.username,\n        password: this.form.password,\n      };\n      if (this.validatorUsername && this.validatorPassword) {\n        //this.login(data);\n        this.login(data);\n        this.$router.push({ name: \"home\" });\n      } else {\n      }\n    },*/\n  },\n  computed: {\n    validatorUsername() {\n      console.log(\"ispis za name\" + this.form.username);\n      return this.form.username.length >= 3 && this.form.username.length <= 30;\n    },\n    validatorPassword() {\n      return this.form.password.length >= 8 && this.form.password.length <= 256;\n    }\n  }\n};","map":{"version":3,"mappings":"AA0CA;AAEA;EACAA;EACAC;EAEAC;IACA;MACAC;QACAC;QACAC;MACA;IACA;EACA;EAEAC;IACA;IACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAZA,CAaA;EACAC;IACAC;MACAC;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","components","data","form","username","password","methods","computed","validatorUsername","console","validatorPassword"],"sourceRoot":"src/views","sources":["LoginView.vue"],"sourcesContent":["<template>\n  <b-container>\n    <br />\n    <h4>Log in</h4>\n    <div class=\"loginDiv\">\n      <b-form @submit.stop.prevent @submit=\"onSubmit\">\n        <b-form-group label=\"Username:\" label-for=\"username\">\n          <b-form-input\n            :state=\"validatorUsername\"\n            id=\"username\"\n            v-model=\"form.username\"\n            type=\"text\"\n            placeholder=\"Username\"\n            required\n          ></b-form-input>\n          <b-form-invalid-feedback :state=\"validatorUsername\">\n            Username must be between 3 and 30 characters.\n          </b-form-invalid-feedback>\n        </b-form-group>\n        <b-form-group label=\"Password:\" label-for=\"password\">\n          <b-form-input\n            :state=\"validatorPassword\"\n            id=\"password\"\n            v-model=\"form.password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n          ></b-form-input>\n          <b-form-invalid-feedback :state=\"validatorPassword\">\n            Password must be between 8 and 256 characters.\n          </b-form-invalid-feedback>\n        </b-form-group>\n        <b-form-valid-feedback :state=\"validatorUsername && validatorPassword\">\n        </b-form-valid-feedback>\n        <br />\n        <b-button type=\"submit\" variant=\"dark\">Log in</b-button>\n      </b-form>\n    </div>\n  </b-container>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\n\nexport default {\n  name: \"Login\",\n  components: {},\n\n  data() {\n    return {\n      form: {\n        username: \"\",\n        password: \"\",\n      },\n    };\n  },\n\n  methods: {\n    //...mapActions([\"login\"]),\n    /*onSubmit(e) {\n      e.preventDefault();\n      const data = {\n        username: this.form.username,\n        password: this.form.password,\n      };\n      if (this.validatorUsername && this.validatorPassword) {\n        //this.login(data);\n        this.login(data);\n        this.$router.push({ name: \"home\" });\n      } else {\n      }\n    },*/\n  },\n  computed: {\n    validatorUsername() {\n      console.log(\"ispis za name\" + this.form.username);\n      return this.form.username.length >= 3 && this.form.username.length <= 30;\n    },\n    validatorPassword() {\n      return this.form.password.length >= 8 && this.form.password.length <= 256;\n    },\n  },\n};\n</script>\n<style scoped>\n.loginDiv {\n  width: 50%;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 100px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}